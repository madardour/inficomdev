{"remainingRequest":"E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\src\\components\\Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\src\\components\\Todo.vue","mtime":1591024706869},{"path":"E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Users\\Mad\\Inficom\\Projects\\Inficom.Cursus\\Inficom.Cursus.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isEditing: false,\r\n      newTodoDescription: \"\"\r\n    };\r\n  },\r\n  props: {\r\n    description: String,\r\n    completed: Boolean\r\n  },\r\n  methods: {\r\n    startEditing() {\r\n      if (this.isEditing) {\r\n        this.finishEditing();\r\n      } else {\r\n        this.newTodoDescription = this.description;\r\n        this.isEditing = true;\r\n        this.$nextTick(() => this.$refs.newTodo.focus());\r\n      }\r\n    },\r\n    finishEditing() {\r\n      this.isEditing = false;\r\n      this.$emit(\"on-edit\", this.newTodoDescription);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <li class=\"d-flex align-items-center list-group-item\">\r\n    <button\r\n      class=\"btn border-0 flex-grow-1 text-left shadow-none\"\r\n      :class=\"{ completed }\"\r\n      @click=\"$emit('on-toggle')\"\r\n      v-if=\"!isEditing\"\r\n    >\r\n      <span>{{ description }}</span>\r\n    </button>\r\n    <form v-else class=\"flex-grow-1\" @submit.prevent=\"finishEditing()\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        v-model=\"newTodoDescription\"\r\n        @blur=\"finishEditing()\"\r\n        ref=\"newTodo\"\r\n      />\r\n    </form>\r\n    <button @click=\"startEditing()\" class=\"btn btn-outline-primary border-0 ml-2\">\r\n      <span class=\"fa fa-edit\"></span>\r\n    </button>\r\n    <button @click=\"$emit('on-delete')\" class=\"btn btn-outline-danger border-0\">\r\n      <span class=\"fa fa-trash\"></span>\r\n    </button>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isEditing: false,\r\n      newTodoDescription: \"\"\r\n    };\r\n  },\r\n  props: {\r\n    description: String,\r\n    completed: Boolean\r\n  },\r\n  methods: {\r\n    startEditing() {\r\n      if (this.isEditing) {\r\n        this.finishEditing();\r\n      } else {\r\n        this.newTodoDescription = this.description;\r\n        this.isEditing = true;\r\n        this.$nextTick(() => this.$refs.newTodo.focus());\r\n      }\r\n    },\r\n    finishEditing() {\r\n      this.isEditing = false;\r\n      this.$emit(\"on-edit\", this.newTodoDescription);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.completed {\r\n  text-decoration: line-through;\r\n}\r\n</style>"]}]}